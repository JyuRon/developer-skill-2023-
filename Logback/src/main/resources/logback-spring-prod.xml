<included>

    <property resource="logback-variables.properties" />
    <!--
        RollingFileApender 설정
        default RollingFileAppender(file-adapter.xml) 를 바탕으로 커스텀
        기본적으로 file-adapter.xml 에는 rolling 정책이 포함됨
    -->
    <appender name="REQUEST1" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- 로깅 출력 포맷 설정 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [REQUEST1] ${LOG_PATTERN}
            </pattern>
            <!--
                로깅 출력 패턴을 보여줄지를 결정한다.
                #logback.classic pattern: [REQUEST1] [%-5level] %d{yyyy-MM-dd HH:mm:ss} [%thread] [%logger{400}:%line] -%msg%n
            -->
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>

        <!-- 로깅 처리될 파일 명 설정 -->
        <file>${LOG_DIR}/request1.log</file>

        <!-- rolling 정책 설정 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">

            <!-- 생성될 로그 파일 명의 패턴 정의 -->
            <fileNamePattern>${LOG_DIR}/archive/request1.%d{yyyy-MM-dd}_%i.log</fileNamePattern>

            <!-- 로그 파일의 최대 크기, request1.log 파일의 크기가 넘어가면 rolling 정책 수행 -->
            <maxFileSize>1KB</maxFileSize>

            <!-- 아카이브 처리된 파일 최대 보관 주기 (단위 : 일) -->
            <maxHistory>30</maxHistory>

            <!--
                true일 경우 어플리케이션을 시작할 때 기존 아카이빙된 로그 파일들을 삭제합니다.
                ${a:-b} : a가 없으면 b로 설정 값 적용
            -->
            <cleanHistoryOnStart>${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}</cleanHistoryOnStart>

            <!--
                아카이빙한 로그 파일의 최대 사이즈를 설정합니다.
                기본값인 0일 때는 최대 용량을 설정하지 않는다는 의미
                100MB등 용량을 명시할 경우 아카이빙 된 로그 파일 용량의 합이 해당 용량을 초과할 때 오래된 로그부터 삭제
                maxHistory가 먼저 적용된 뒤에 적용
            -->
            <totalSizeCap>${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}</totalSizeCap>
        </rollingPolicy>
    </appender>


    <!-- MDC 관련 설정 -->
    <appender name="MDC" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- MDC 관련 로깅 출력 포맷 설정 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [MDC] %X{job} %msg%n
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>

        <file>${LOG_DIR}/mdc.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/mdc.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>1KB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- 특정 로그 레벨만을 출력하는 설정 -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <!-- 완전히 일치하냐 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 맞지 않으면?? -->
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [WARN] ${LOG_PATTERN}
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>

        <file>${LOG_DIR}/warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/warn.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>1KB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <root level="INFO">
        <appender-ref ref="REQUEST1" />
        <appender-ref ref="MDC" />
        <appender-ref ref="WARN" />
    </root>

</included>